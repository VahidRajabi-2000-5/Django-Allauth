1. Custom User
    . AbstracUser
    . forms.py
    . CustomAdmin UserAdmin

2. Django allauth
    . login ==> password change
    . logout
    . Signup
    . password reset
    . Create verified email pages all
    . email messages.txt

======================================
زمانی کاربری ایمیل خود را تایید نکرده برای تایید ایمیل قبلش یک پیام به عنوان ایمیل برای شما ارسال شده برای تایید ایمیل
verification_sent.html
داخل ایمیل یک لینک قرار داره که به صفحه 
email_confirm.html که یک فرم داره برای تایید ایمیل زمانی که تایید شد به صفحه لاگین میره
===================================================
settings.py
LOGIN_URL, LOGIN_REDIRECT_URL, و LOGOUT_REDIRECT_URL:

LOGIN_URL مشخص می‌کند که کاربر به کجا باید منتقل شود تا وارد شوید اگر به یک صفحه محتوی محدود شده دسترسی داشته باشد.
LOGIN_REDIRECT_URL مشخص می‌کند که کاربر به کجا منتقل می‌شود پس از ورود موفقیت‌آمیز.
LOGOUT_REDIRECT_URL مشخص می‌کند کاربر به کجا منتقل می‌شود پس از خروج (لوگ‌آوت).
AUTHENTICATION_BACKENDS:

این تنظیمات مربوط به انتخاب روش‌های احراز هویت برای کاربران در سیستم می‌باشد.
ModelBackend از پایگاه داده معمولی Django برای احراز هویت بر اساس نام کاربری استفاده می‌کند.
AuthenticationBackend از افزونه Allauth برای احراز هویت بر اساس ایمیل و سایر ویژگی‌ها استفاده می‌کند.
SITE_ID:

این تنظیم مشخص می‌کند کدام سایت (در صورتی که چند سایت در پروژه داشته باشید) به عنوان سایت پیش‌فرض برای ایمیل‌ها و سایر موارد استفاده شود.
ACCOUNT_SESSION_REMEMBER:

این تنظیم مشخص می‌کند آیا جلسه کاربر باید به خاطر سپرده شود یا نه. اگر فعال باشد، کاربران بعد از بستن مرورگر خود همچنان وارد شده می‌مانند.
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE:

این تنظیم مشخص می‌کند آیا کاربران باید رمز عبور را دو بار وارد کنند تا از مطابقت آن اطمینان حاصل شود یا نه.
ACCOUNT_AUTHENTICATION_METHOD:

این تنظیم مشخص می‌کند که احراز هویت از طریق نام کاربری، ایمیل یا هر دوی آنها (مقدار 'username_email') انجام شود.
ACCOUNT_EMAIL_REQUIRED و ACCOUNT_USERNAME_REQUIRED:

این تنظیمات مشخص می‌کنند که آیا ایمیل و نام کاربری برای ثبت‌نام الزامی باشند یا نه.
ACCOUNT_UNIQUE_EMAIL:

این تنظیم مشخص می‌کند که آیا ایمیل باید یکتا باشد یا نه.
ACCOUNT_EMAIL_VERIFICATION:

این تنظیم مشخص می‌کند که فرآیند تأیید ایمیل چگونه انجام شود. در اینجا، مقدار 'mandatory' نشان می‌دهد که کاربران باید ایمیل خود را تأیید کنند تا به سیستم دسترسی داشته باشند.
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL و ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL:

این تنظیمات مشخص می‌کنند به کجا کاربران باید منتقل شوند پس از تأیید ایمیل خود، بسته به این که آیا آنها وارد شده‌اند یا نه.
EMAIL_BACKEND و تنظیمات مربوط به ارسال ایمیل:

این تنظیمات مربوط به نحوه ارسال ایمیل‌ها در پروژه شما هستند. در اینجا از console.EmailBackend برای ارسال ایمیل به کنسول استفاده شده است که برای توسعه و آزمایش مناسب است.
تنظیمات دیگر مربوط به SMTP برای ارسال ایمیل از یک سرور ایمیل Gmail هستند، اما برای محیط توسعه ممکن است نیاز به تنظیمات متفاوتی داشته باشید.
توضیحات مرتبط با هر یک از این تنظیمات به پیکربندی دقیق توسعه و نیازهای پروژه شما بستگی دارد.
===============================================================
ارسال واقعی ایمیل
EMAIL_BACKEND:
این تنظیم مشخص می‌کند کدام پشتیبان ارسال ایمیل برای پروژه شما استفاده می‌شود.
در کدی که ارائه داده‌اید، EMAIL_BACKEND به 'django.core.mail.backends.console.EmailBackend' تنظیم شده است. این به این معناست که ایمیل‌ها به کنسول پروژه شما ارسال می‌شوند و نه به واقعیت به ایمیل‌های واقعی ارسال نمی‌شوند. این بسیار مناسب برای محیط توسعه است تا به ایمیل‌های تستی دسترسی داشته باشید. در محیط تولید، شما باید از یک EMAIL_BACKEND واقعی مانند 'django.core.mail.backends.smtp.EmailBackend' استفاده کنید تا ایمیل‌ها به واقعیت ارسال شوند.
تنظیمات مرتبط با ارسال ایمیل:

EMAIL_HOST، EMAIL_USE_TLS، و EMAIL_PORT تنظیمات مرتبط با استفاده از SMTP (Simple Mail Transfer Protocol) برای ارسال ایمیل از یک سرور ایمیل واقعی می‌باشند.
در کدی که ارائه داده‌اید، تنظیمات SMTP برای سرور ایمیل Gmail تنظیم شده‌اند. EMAIL_BACKEND باید به 'django.core.mail.backends.smtp.EmailBackend' تنظیم شده باشد تا از این تنظیمات SMTP استفاده شود.
EMAIL_HOST میزبان (host) سرور ایمیل را مشخص می‌کند. در اینجا، برای Gmail از 'smtp.gmail.com' استفاده شده است.
EMAIL_USE_TLS نشان می‌دهد که اتصال به سرور ایمیل از طریق TLS (Transport Layer Security) انجام شود یا نه. معمولاً باید بر روی True باشد.
EMAIL_PORT پورت سرور ایمیل را مشخص می‌کند. برای Gmail، معمولاً باید بر روی 587 تنظیم شود.
تنظیمات ارسال ایمیل بستگی به سرویس ایمیلی که از آن استفاده می‌کنید، میزبان سرور ایمیل، پورت، و تنظیمات امنیتی مختلفی می‌توانند داشته باشند. این تنظیمات باید با تنظیمات سرویس ایمیل خود همخوانی داشته باشند تا بتوانید به درستی ایمیل‌ها را ارسال کنید.

=============================================
تایید ایمیل

تنظیم ACCOUNT_EMAIL_VERIFICATION در Django Allauth می‌تواند مقادیر مختلفی داشته باشد، که هر کدام تأثیرات مختلفی در فرآیند تأیید ایمیل کاربر دارند. در زیر می‌توانید مقادیر مختلفی که ACCOUNT_EMAIL_VERIFICATION می‌تواند داشته باشد را مشاهده کنید:

'none': در این حالت، فرآیند تأیید ایمیل غیرفعال است و کاربران بدون تأیید ایمیل می‌توانند وارد سیستم شوند. این گزینه به عنوان تنظیم پیش‌فرض در نظر گرفته می‌شود.

'optional': کاربران می‌توانند یک ایمیل تأییدی درخواست کنند اما بدون تأیید هم می‌توانند وارد سیستم شوند.

'mandatory': در این حالت، کاربران باید ایمیل خود را تأیید کنند تا به سیستم دسترسی داشته باشند. پس از ثبت‌نام، ایمیل تأییدی برای آنها ارسال می‌شود و تا زمانی که ایمیل تأییدی دریافت نشود، دسترسی کامل به سیستم ندارند.

'admin': در این حالت، تأیید ایمیل به عهده مدیر سیستم است. به عبارت دیگر، کاربران باید ایمیل خود را تأیید نکنند و تأیید توسط مدیر انجام می‌شود.

================================================================
توجه داشته باشید که تگ {% load account %} تنها برای صفحاتی که مرتبط با مدیریت کاربری و احراز هویت هستند، معمولاً به کار می‌رود و در صفحات دیگر از آن استفاده نمی‌شود.




















